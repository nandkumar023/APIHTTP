<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="8" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-23T09:36:48 IST" name="RestAssured" finished-at="2022-10-23T09:36:58 IST" duration-ms="9880">
    <groups>
    </groups>
    <test started-at="2022-10-23T09:36:48 IST" name="Product Order" finished-at="2022-10-23T09:36:58 IST" duration-ms="9880">
      <class name="API_TestCases.API_POC">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:48 IST" name="beforeSuite" finished-at="2022-10-23T09:36:48 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:48 IST" name="beforeClass" finished-at="2022-10-23T09:36:48 IST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:48 IST" name="beforeTest" finished-at="2022-10-23T09:36:49 IST" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.a_get_accessToken() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="a_get_accessToken()[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:49 IST" name="a_get_accessToken" finished-at="2022-10-23T09:36:52 IST" duration-ms="3363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a_get_accessToken -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:52 IST" name="afterMethod" finished-at="2022-10-23T09:36:52 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.a_get_accessToken() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:52 IST" name="beforeTest" finished-at="2022-10-23T09:36:52 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.b_accessTokenInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="b_accessTokenInfo()[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:52 IST" name="b_accessTokenInfo" finished-at="2022-10-23T09:36:54 IST" duration-ms="1837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b_accessTokenInfo -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:54 IST" name="afterMethod" finished-at="2022-10-23T09:36:54 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.b_accessTokenInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:54 IST" name="beforeTest" finished-at="2022-10-23T09:36:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.c_checkIfUserExists() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="c_checkIfUserExists()[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:54 IST" name="c_checkIfUserExists" finished-at="2022-10-23T09:36:55 IST" duration-ms="1635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c_checkIfUserExists -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:55 IST" name="afterMethod" finished-at="2022-10-23T09:36:55 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.c_checkIfUserExists() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:55 IST" name="afterClass" finished-at="2022-10-23T09:36:55 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:API_TestCases.API_POC@4da4253]" started-at="2022-10-23T09:36:58 IST" name="afterSuite" finished-at="2022-10-23T09:37:15 IST" duration-ms="16702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- API_TestCases.API_POC -->
      <class name="API_TestCases.API_POC2">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:API_TestCases.API_POC2@2e222612]" started-at="2022-10-23T09:36:55 IST" name="beforeClass" finished-at="2022-10-23T09:36:56 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC2@2e222612]" started-at="2022-10-23T09:36:56 IST" name="beforeTest" finished-at="2022-10-23T09:36:56 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC2.a_get_accessToken() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="a_get_accessToken()[pri:0, instance:API_TestCases.API_POC2@2e222612]" started-at="2022-10-23T09:36:56 IST" name="a_get_accessToken" finished-at="2022-10-23T09:36:57 IST" duration-ms="1027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a_get_accessToken -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC2@2e222612]" started-at="2022-10-23T09:36:57 IST" name="afterMethod" finished-at="2022-10-23T09:36:57 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC2.a_get_accessToken() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC2@2e222612]" started-at="2022-10-23T09:36:57 IST" name="beforeTest" finished-at="2022-10-23T09:36:57 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC2.b_accessTokenInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="b_accessTokenInfo()[pri:0, instance:API_TestCases.API_POC2@2e222612]" started-at="2022-10-23T09:36:57 IST" name="b_accessTokenInfo" finished-at="2022-10-23T09:36:57 IST" duration-ms="604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b_accessTokenInfo -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC2@2e222612]" started-at="2022-10-23T09:36:57 IST" name="afterMethod" finished-at="2022-10-23T09:36:57 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC2.b_accessTokenInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC2@2e222612]" started-at="2022-10-23T09:36:57 IST" name="beforeTest" finished-at="2022-10-23T09:36:57 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC2.c_checkIfUserExists() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="c_checkIfUserExists()[pri:0, instance:API_TestCases.API_POC2@2e222612]" started-at="2022-10-23T09:36:57 IST" name="c_checkIfUserExists" finished-at="2022-10-23T09:36:58 IST" duration-ms="938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c_checkIfUserExists -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC2@2e222612]" started-at="2022-10-23T09:36:58 IST" name="afterMethod" finished-at="2022-10-23T09:36:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC2.c_checkIfUserExists() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:API_TestCases.API_POC2@2e222612]" started-at="2022-10-23T09:36:58 IST" name="afterClass" finished-at="2022-10-23T09:36:58 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- API_TestCases.API_POC2 -->
    </test> <!-- Product Order -->
  </suite> <!-- RestAssured -->
</testng-results>
