<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="3" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-01T23:58:21 IST" name="Default suite" finished-at="2022-11-01T23:58:27 IST" duration-ms="6644">
    <groups>
    </groups>
    <test started-at="2022-11-01T23:58:21 IST" name="Default test" finished-at="2022-11-01T23:58:27 IST" duration-ms="6644">
      <class name="API_TestCases.API_POC">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:21 IST" name="beforeSuite" finished-at="2022-11-01T23:58:21 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:21 IST" name="beforeClass" finished-at="2022-11-01T23:58:21 IST" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:21 IST" name="beforeTest" finished-at="2022-11-01T23:58:21 IST" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.a_get_accessToken() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="a_get_accessToken()[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:21 IST" name="a_get_accessToken" finished-at="2022-11-01T23:58:24 IST" duration-ms="2859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a_get_accessToken -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:24 IST" name="afterMethod" finished-at="2022-11-01T23:58:24 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.a_get_accessToken() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:24 IST" name="beforeTest" finished-at="2022-11-01T23:58:24 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.b_accessTokenInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="b_accessTokenInfo()[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:24 IST" name="b_accessTokenInfo" finished-at="2022-11-01T23:58:26 IST" duration-ms="1896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b_accessTokenInfo -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:26 IST" name="afterMethod" finished-at="2022-11-01T23:58:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.b_accessTokenInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeTest(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:26 IST" name="beforeTest" finished-at="2022-11-01T23:58:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.c_checkIfUserExists() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="c_checkIfUserExists()[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:26 IST" name="c_checkIfUserExists" finished-at="2022-11-01T23:58:27 IST" duration-ms="1569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c_checkIfUserExists -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:27 IST" name="afterMethod" finished-at="2022-11-01T23:58:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void API_TestCases.API_POC.c_checkIfUserExists() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:27 IST" name="afterClass" finished-at="2022-11-01T23:58:27 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:API_TestCases.API_POC@1cf6d1be]" started-at="2022-11-01T23:58:27 IST" name="afterSuite" finished-at="2022-11-01T23:58:55 IST" duration-ms="27534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- API_TestCases.API_POC -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
